[gd_resource type="VisualShader" load_steps=24 format=2]

[ext_resource path="res://arts/ui/Clouds.png" type="Texture" id=1]
[ext_resource path="res://arts/shaders/Voronoi.png" type="Texture" id=2]

[sub_resource type="VisualShaderNodeInput" id=9]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id=10]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=12]
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=13]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeInput" id=14]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=15]

[sub_resource type="VisualShaderNodeVectorCompose" id=16]

[sub_resource type="VisualShaderNodeScalarOp" id=17]

[sub_resource type="VisualShaderNodeInput" id=18]
input_name = "time"

[sub_resource type="VisualShaderNodeTexture" id=19]
source = 2
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=20]
default_input_values = [ 0, 0.0, 1, 0.05 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=21]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=29]
uniform_name = "distortion"
default_value_enabled = true
default_value = 0.021

[sub_resource type="VisualShaderNodeVectorOp" id=30]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=22]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeInput" id=23]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=24]

[sub_resource type="VisualShaderNodeInput" id=25]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=26]

[sub_resource type="VisualShaderNodeVectorCompose" id=27]

[sub_resource type="VisualShaderNodeScalarOp" id=28]
operator = 1

[resource]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_3;
uniform sampler2D tex_frg_14;
uniform float distortion = 0.021;



void vertex() {
// Output:0

}

void fragment() {
// Input:4
	vec3 n_out4p0 = vec3(UV, 0.0);

// Input:6
	vec3 n_out6p0 = vec3(SCREEN_UV, 0.0);

// VectorDecompose:7
	float n_out7p0 = n_out6p0.x;
	float n_out7p1 = n_out6p0.y;
	float n_out7p2 = n_out6p0.z;

// Input:10
	float n_out10p0 = TIME;

// ScalarOp:13
	float n_in13p1 = 0.10000;
	float n_out13p0 = n_out10p0 * n_in13p1;

// ScalarOp:9
	float n_out9p0 = n_out7p1 - n_out13p0;

// VectorCompose:8
	float n_in8p2 = 0.00000;
	vec3 n_out8p0 = vec3(n_out7p0, n_out9p0, n_in8p2);

// Input:15
	vec3 n_out15p0 = vec3(SCREEN_UV, 0.0);

// VectorDecompose:16
	float n_out16p0 = n_out15p0.x;
	float n_out16p1 = n_out15p0.y;
	float n_out16p2 = n_out15p0.z;

// Input:19
	float n_out19p0 = TIME;

// ScalarOp:20
	float n_in20p1 = 0.05000;
	float n_out20p0 = n_out19p0 * n_in20p1;

// ScalarOp:18
	float n_out18p0 = n_out16p0 + n_out20p0;

// VectorCompose:17
	float n_in17p2 = 0.00000;
	vec3 n_out17p0 = vec3(n_out18p0, n_out16p1, n_in17p2);

// VectorOp:23
	vec3 n_out23p0 = n_out8p0 * n_out17p0;

// Texture:3
	vec4 tex_frg_3_read = texture(tex_frg_3, n_out23p0.xy);
	vec3 n_out3p0 = tex_frg_3_read.rgb;
	float n_out3p1 = tex_frg_3_read.a;

// Texture:14
	vec4 tex_frg_14_read = texture(tex_frg_14, n_out23p0.xy);
	vec3 n_out14p0 = tex_frg_14_read.rgb;
	float n_out14p1 = tex_frg_14_read.a;

// VectorOp:21
	vec3 n_out21p0 = n_out3p0 * n_out14p0;

// ScalarUniform:22
	float n_out22p0 = distortion;

// VectorOp:11
	vec3 n_out11p0 = n_out21p0 * vec3(n_out22p0);

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 + n_out11p0;

// Texture:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 _tex_read = texture(TEXTURE, n_out5p0.xy);
		n_out2p0 = _tex_read.rgb;
		n_out2p1 = _tex_read.a;
	}

// Output:0
	COLOR.rgb = n_out2p0;
	COLOR.a = n_out2p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -1781.88, 237.142 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 580, 160 )
nodes/fragment/2/node = SubResource( 19 )
nodes/fragment/2/position = Vector2( 40, 140 )
nodes/fragment/3/node = SubResource( 22 )
nodes/fragment/3/position = Vector2( -1460, 60 )
nodes/fragment/4/node = SubResource( 23 )
nodes/fragment/4/position = Vector2( -460, 20 )
nodes/fragment/5/node = SubResource( 24 )
nodes/fragment/5/position = Vector2( -220, 140 )
nodes/fragment/6/node = SubResource( 25 )
nodes/fragment/6/position = Vector2( -2800, 180 )
nodes/fragment/7/node = SubResource( 26 )
nodes/fragment/7/position = Vector2( -2560, 180 )
nodes/fragment/8/node = SubResource( 27 )
nodes/fragment/8/position = Vector2( -2080, 200 )
nodes/fragment/9/node = SubResource( 28 )
nodes/fragment/9/position = Vector2( -2320, 240 )
nodes/fragment/10/node = SubResource( 9 )
nodes/fragment/10/position = Vector2( -2760, 320 )
nodes/fragment/11/node = SubResource( 10 )
nodes/fragment/11/position = Vector2( -560, 160 )
nodes/fragment/13/node = SubResource( 12 )
nodes/fragment/13/position = Vector2( -2540, 300 )
nodes/fragment/14/node = SubResource( 13 )
nodes/fragment/14/position = Vector2( -1380, 480 )
nodes/fragment/15/node = SubResource( 14 )
nodes/fragment/15/position = Vector2( -2720, 600 )
nodes/fragment/16/node = SubResource( 15 )
nodes/fragment/16/position = Vector2( -2480, 600 )
nodes/fragment/17/node = SubResource( 16 )
nodes/fragment/17/position = Vector2( -2000, 620 )
nodes/fragment/18/node = SubResource( 17 )
nodes/fragment/18/position = Vector2( -2200, 580 )
nodes/fragment/19/node = SubResource( 18 )
nodes/fragment/19/position = Vector2( -2680, 740 )
nodes/fragment/20/node = SubResource( 20 )
nodes/fragment/20/position = Vector2( -2460, 720 )
nodes/fragment/21/node = SubResource( 21 )
nodes/fragment/21/position = Vector2( -1060, 160 )
nodes/fragment/22/node = SubResource( 29 )
nodes/fragment/22/position = Vector2( -860, 320 )
nodes/fragment/23/node = SubResource( 30 )
nodes/fragment/23/position = Vector2( -1740, 380 )
nodes/fragment/connections = PoolIntArray( 2, 1, 0, 1, 4, 0, 5, 0, 5, 0, 2, 0, 6, 0, 7, 0, 7, 0, 8, 0, 7, 1, 9, 0, 9, 0, 8, 1, 11, 0, 5, 1, 10, 0, 13, 0, 13, 0, 9, 1, 15, 0, 16, 0, 19, 0, 20, 0, 20, 0, 18, 1, 3, 0, 21, 0, 14, 0, 21, 1, 21, 0, 11, 0, 16, 0, 18, 0, 16, 1, 17, 1, 18, 0, 17, 0, 2, 0, 0, 0, 22, 0, 11, 1, 8, 0, 23, 0, 23, 0, 3, 0, 17, 0, 23, 1, 23, 0, 14, 0 )
