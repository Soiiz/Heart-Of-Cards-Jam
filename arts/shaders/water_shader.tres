[gd_resource type="VisualShader" load_steps=43 format=2]

[ext_resource path="res://arts/shaders/WaterNoise.png" type="Texture" id=1]
[ext_resource path="res://arts/shaders/waterComp.png" type="Texture" id=2]

[sub_resource type="VisualShaderNodeScalarOp" id=1]
operator = 3

[sub_resource type="VisualShaderNodeVectorCompose" id=2]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarOp" id=3]

[sub_resource type="VisualShaderNodeScalarOp" id=4]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=6]

[sub_resource type="VisualShaderNodeScalarOp" id=7]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=8]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=9]

[sub_resource type="VisualShaderNodeColorUniform" id=10]
uniform_name = "ColorUniform"

[sub_resource type="VisualShaderNodeColorOp" id=11]
operator = 4

[sub_resource type="VisualShaderNodeTexture" id=12]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeScalarOp" id=13]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=14]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=15]

[sub_resource type="VisualShaderNodeScalarUniform" id=16]
uniform_name = "Distortion"

[sub_resource type="VisualShaderNodeInput" id=17]
input_name = "time"

[sub_resource type="VisualShaderNodeInput" id=18]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=19]

[sub_resource type="VisualShaderNodeScalarOp" id=20]

[sub_resource type="VisualShaderNodeScalarOp" id=21]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=22]
uniform_name = "Speed"

[sub_resource type="VisualShaderNodeVectorCompose" id=23]

[sub_resource type="VisualShaderNodeScalarUniform" id=29]
uniform_name = "Blur_Amount"
default_value_enabled = true

[sub_resource type="VisualShaderNodeVectorOp" id=31]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=32]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=33]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeTexture" id=24]
source = 1

[sub_resource type="VisualShaderNodeVectorDecompose" id=34]

[sub_resource type="VisualShaderNodeScalarOp" id=35]

[sub_resource type="VisualShaderNodeVectorCompose" id=36]

[sub_resource type="VisualShaderNodeVectorOp" id=37]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=38]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=39]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=40]
default_input_values = [ 0, 0.0, 1, 2.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=41]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 3

[sub_resource type="VisualShaderNodeInput" id=25]
input_name = "screen_pixel_size"

[sub_resource type="VisualShaderNodeVectorDecompose" id=26]

[sub_resource type="VisualShaderNodeInput" id=27]
input_name = "texture_pixel_size"

[sub_resource type="VisualShaderNodeVectorDecompose" id=28]

[resource]
code = "shader_type canvas_item;
uniform vec4 ColorUniform : hint_color;
uniform float Distortion;
uniform float Speed;
uniform sampler2D tex_frg_38;
uniform sampler2D tex_frg_21;
uniform float Blur_Amount = 0;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:19
	vec3 n_out19p0 = ColorUniform.rgb;
	float n_out19p1 = ColorUniform.a;

// Input:17
	vec3 n_out17p0 = vec3(SCREEN_UV, 0.0);

// VectorDecompose:18
	float n_out18p0 = n_out17p0.x;
	float n_out18p1 = n_out17p0.y;
	float n_out18p2 = n_out17p0.z;

// ScalarUniform:25
	float n_out25p0 = Distortion;

// Input:39
	vec3 n_out39p0 = vec3(SCREEN_UV, 0.0);

// VectorDecompose:40
	float n_out40p0 = n_out39p0.x;
	float n_out40p1 = n_out39p0.y;
	float n_out40p2 = n_out39p0.z;

// Input:26
	float n_out26p0 = TIME;

// ScalarUniform:31
	float n_out31p0 = Speed;

// ScalarOp:30
	float n_out30p0 = n_out26p0 * n_out31p0;

// ScalarOp:41
	float n_out41p0 = n_out40p0 + n_out30p0;

// VectorCompose:42
	float n_in42p2 = 0.00000;
	vec3 n_out42p0 = vec3(n_out41p0, n_out40p1, n_in42p2);

// Texture:38
	vec4 tex_frg_38_read = texture(tex_frg_38, n_out42p0.xy);
	vec3 n_out38p0 = tex_frg_38_read.rgb;
	float n_out38p1 = tex_frg_38_read.a;

// Input:44
	float n_out44p0 = TIME;

// ScalarFunc:45
	float n_out45p0 = sin(n_out44p0);

// ScalarOp:46
	float n_in46p1 = 2.00000;
	float n_out46p0 = n_out45p0 + n_in46p1;

// ScalarOp:47
	float n_in47p1 = 2.00000;
	float n_out47p0 = n_out46p0 / n_in47p1;

// VectorOp:43
	vec3 n_out43p0 = n_out38p0 * vec3(n_out47p0);

// Input:27
	vec3 n_out27p0 = vec3(SCREEN_UV, 0.0);

// VectorDecompose:28
	float n_out28p0 = n_out27p0.x;
	float n_out28p1 = n_out27p0.y;
	float n_out28p2 = n_out27p0.z;

// ScalarOp:29
	float n_out29p0 = n_out28p1 + n_out30p0;

// VectorCompose:32
	float n_in32p2 = 0.00000;
	vec3 n_out32p0 = vec3(n_out28p0, n_out29p0, n_in32p2);

// Texture:21
	vec4 tex_frg_21_read = texture(tex_frg_21, n_out32p0.xy);
	vec3 n_out21p0 = tex_frg_21_read.rgb;
	float n_out21p1 = tex_frg_21_read.a;

// VectorOp:37
	vec3 n_out37p0 = n_out43p0 * n_out21p0;

// VectorDecompose:24
	float n_out24p0 = n_out37p0.x;
	float n_out24p1 = n_out37p0.y;
	float n_out24p2 = n_out37p0.z;

// ScalarOp:23
	float n_out23p0 = n_out25p0 * n_out24p0;

// ScalarOp:22
	float n_out22p0 = n_out18p0 - n_out23p0;

// Input:6
	vec3 n_out6p0 = vec3(SCREEN_PIXEL_SIZE, 1.0);

// VectorDecompose:7
	float n_out7p0 = n_out6p0.x;
	float n_out7p1 = n_out6p0.y;
	float n_out7p2 = n_out6p0.z;

// Input:8
	vec3 n_out8p0 = vec3(TEXTURE_PIXEL_SIZE, 1.0);

// VectorDecompose:9
	float n_out9p0 = n_out8p0.x;
	float n_out9p1 = n_out8p0.y;
	float n_out9p2 = n_out8p0.z;

// ScalarOp:10
	float n_out10p0 = n_out7p1 / n_out9p1;

// Input:14
	vec3 n_out14p0 = vec3(UV, 0.0);

// VectorDecompose:15
	float n_out15p0 = n_out14p0.x;
	float n_out15p1 = n_out14p0.y;
	float n_out15p2 = n_out14p0.z;

// ScalarOp:13
	float n_out13p0 = n_out10p0 * n_out15p1;

// ScalarOp:16
	float n_in16p1 = 2.00000;
	float n_out16p0 = n_out13p0 * n_in16p1;

// ScalarOp:12
	float n_out12p0 = n_out18p1 + n_out16p0;

// VectorCompose:11
	float n_in11p2 = 0.00000;
	vec3 n_out11p0 = vec3(n_out22p0, n_out12p0, n_in11p2);

// ScalarUniform:33
	float n_out33p0 = Blur_Amount;

// Texture:4
	vec3 n_out4p0;
	float n_out4p1;
	{
		vec4 _tex_read = textureLod(SCREEN_TEXTURE, n_out11p0.xy, n_out33p0);
		n_out4p0 = _tex_read.rgb;
		n_out4p1 = _tex_read.a;
	}

// ColorOp:20
	vec3 n_out20p0;
	{
		float base = n_out19p0.x;
		float blend = n_out4p0.x;
		if (base < 0.5) {
			n_out20p0.x = 2.0 * base * blend;
		} else {
			n_out20p0.x = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = n_out19p0.y;
		float blend = n_out4p0.y;
		if (base < 0.5) {
			n_out20p0.y = 2.0 * base * blend;
		} else {
			n_out20p0.y = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = n_out19p0.z;
		float blend = n_out4p0.z;
		if (base < 0.5) {
			n_out20p0.z = 2.0 * base * blend;
		} else {
			n_out20p0.z = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}

// Output:0
	COLOR.rgb = n_out20p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -3319.62, 60.7831 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 400, 300 )
nodes/fragment/4/node = SubResource( 24 )
nodes/fragment/4/position = Vector2( -340, 380 )
nodes/fragment/6/node = SubResource( 25 )
nodes/fragment/6/position = Vector2( -1980, 480 )
nodes/fragment/7/node = SubResource( 26 )
nodes/fragment/7/position = Vector2( -1680, 480 )
nodes/fragment/8/node = SubResource( 27 )
nodes/fragment/8/position = Vector2( -2020, 640 )
nodes/fragment/9/node = SubResource( 28 )
nodes/fragment/9/position = Vector2( -1700, 640 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -1440, 540 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( -600, 420 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( -820, 480 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( -1200, 620 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( -1720, 780 )
nodes/fragment/15/node = SubResource( 6 )
nodes/fragment/15/position = Vector2( -1460, 780 )
nodes/fragment/16/node = SubResource( 7 )
nodes/fragment/16/position = Vector2( -980, 620 )
nodes/fragment/17/node = SubResource( 8 )
nodes/fragment/17/position = Vector2( -1320, 420 )
nodes/fragment/18/node = SubResource( 9 )
nodes/fragment/18/position = Vector2( -1080, 420 )
nodes/fragment/19/node = SubResource( 10 )
nodes/fragment/19/position = Vector2( -360, 240 )
nodes/fragment/20/node = SubResource( 11 )
nodes/fragment/20/position = Vector2( -80, 280 )
nodes/fragment/21/node = SubResource( 12 )
nodes/fragment/21/position = Vector2( -1720, -120 )
nodes/fragment/22/node = SubResource( 13 )
nodes/fragment/22/position = Vector2( -820, 300 )
nodes/fragment/23/node = SubResource( 14 )
nodes/fragment/23/position = Vector2( -1040, 160 )
nodes/fragment/24/node = SubResource( 15 )
nodes/fragment/24/position = Vector2( -1280, 220 )
nodes/fragment/25/node = SubResource( 16 )
nodes/fragment/25/position = Vector2( -1260, 120 )
nodes/fragment/26/node = SubResource( 17 )
nodes/fragment/26/position = Vector2( -2760, 260 )
nodes/fragment/27/node = SubResource( 18 )
nodes/fragment/27/position = Vector2( -2820, 140 )
nodes/fragment/28/node = SubResource( 19 )
nodes/fragment/28/position = Vector2( -2640, 140 )
nodes/fragment/29/node = SubResource( 20 )
nodes/fragment/29/position = Vector2( -2240, 140 )
nodes/fragment/30/node = SubResource( 21 )
nodes/fragment/30/position = Vector2( -2540, 260 )
nodes/fragment/31/node = SubResource( 22 )
nodes/fragment/31/position = Vector2( -2760, 360 )
nodes/fragment/32/node = SubResource( 23 )
nodes/fragment/32/position = Vector2( -1980, 120 )
nodes/fragment/33/node = SubResource( 29 )
nodes/fragment/33/position = Vector2( -680, 680 )
nodes/fragment/37/node = SubResource( 31 )
nodes/fragment/37/position = Vector2( -1320, -140 )
nodes/fragment/38/node = SubResource( 32 )
nodes/fragment/38/position = Vector2( -1720, -380 )
nodes/fragment/39/node = SubResource( 33 )
nodes/fragment/39/position = Vector2( -2860, -140 )
nodes/fragment/40/node = SubResource( 34 )
nodes/fragment/40/position = Vector2( -2680, -140 )
nodes/fragment/41/node = SubResource( 35 )
nodes/fragment/41/position = Vector2( -2300, -180 )
nodes/fragment/42/node = SubResource( 36 )
nodes/fragment/42/position = Vector2( -2020, -160 )
nodes/fragment/43/node = SubResource( 37 )
nodes/fragment/43/position = Vector2( -1420, -280 )
nodes/fragment/44/node = SubResource( 38 )
nodes/fragment/44/position = Vector2( -1500, -460 )
nodes/fragment/45/node = SubResource( 39 )
nodes/fragment/45/position = Vector2( -1300, -460 )
nodes/fragment/46/node = SubResource( 40 )
nodes/fragment/46/position = Vector2( -1100, -480 )
nodes/fragment/47/node = SubResource( 41 )
nodes/fragment/47/position = Vector2( -920, -480 )
nodes/fragment/connections = PoolIntArray( 6, 0, 7, 0, 8, 0, 9, 0, 7, 1, 10, 0, 9, 1, 10, 1, 11, 0, 4, 0, 12, 0, 11, 1, 10, 0, 13, 0, 14, 0, 15, 0, 15, 1, 13, 1, 13, 0, 16, 0, 16, 0, 12, 1, 17, 0, 18, 0, 18, 1, 12, 0, 19, 0, 20, 0, 4, 0, 20, 1, 20, 0, 0, 0, 18, 0, 22, 0, 22, 0, 11, 0, 23, 0, 22, 1, 25, 0, 23, 0, 27, 0, 28, 0, 26, 0, 30, 0, 31, 0, 30, 1, 30, 0, 29, 1, 6, 0, 7, 0, 8, 0, 9, 0, 7, 1, 10, 0, 9, 1, 10, 1, 11, 0, 4, 0, 12, 0, 11, 1, 10, 0, 13, 0, 14, 0, 15, 0, 15, 1, 13, 1, 13, 0, 16, 0, 16, 0, 12, 1, 17, 0, 18, 0, 18, 1, 12, 0, 19, 0, 20, 0, 4, 0, 20, 1, 20, 0, 0, 0, 18, 0, 22, 0, 22, 0, 11, 0, 23, 0, 22, 1, 24, 0, 23, 1, 25, 0, 23, 0, 27, 0, 28, 0, 26, 0, 30, 0, 31, 0, 30, 1, 30, 0, 29, 1, 33, 0, 4, 1, 32, 0, 21, 0, 28, 0, 32, 0, 28, 1, 29, 0, 29, 0, 32, 1, 37, 0, 24, 0, 21, 0, 37, 1, 39, 0, 40, 0, 39, 0, 40, 0, 42, 0, 38, 0, 40, 0, 41, 0, 40, 1, 42, 1, 41, 0, 42, 0, 30, 0, 41, 1, 43, 0, 37, 0, 38, 0, 43, 0, 44, 0, 45, 0, 45, 0, 46, 0, 46, 0, 47, 0, 47, 0, 43, 1 )
