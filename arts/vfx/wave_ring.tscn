[gd_scene load_steps=29 format=2]

[ext_resource path="res://arts/vfx/wave_ring.png" type="Texture" id=1]
[ext_resource path="res://arts/shaders/waterComp.png" type="Texture" id=2]

[sub_resource type="VisualShaderNodeVectorOp" id=8]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=9]
constant = 0.05

[sub_resource type="VisualShaderNodeVectorDecompose" id=14]

[sub_resource type="VisualShaderNodeVectorCompose" id=15]

[sub_resource type="VisualShaderNodeScalarOp" id=16]

[sub_resource type="VisualShaderNodeInput" id=17]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=18]
default_input_values = [ 0, 0.0, 1, 0.037 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=19]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=20]

[sub_resource type="VisualShaderNodeVectorCompose" id=21]

[sub_resource type="VisualShaderNodeScalarOp" id=22]

[sub_resource type="VisualShaderNodeInput" id=23]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=24]
default_input_values = [ 0, 0.0, 1, 0.02 ]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=25]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeVectorOp" id=26]

[sub_resource type="VisualShaderNodeInput" id=1]
input_name = "alpha"

[sub_resource type="VisualShaderNodeTexture" id=2]
source = 2

[sub_resource type="VisualShaderNodeVectorOp" id=3]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=10]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeInput" id=11]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=12]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeInput" id=13]
input_name = "screen_uv"

[sub_resource type="VisualShader" id=4]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_23;
uniform sampler2D tex_frg_6;



void vertex() {
// Output:0

}

void fragment() {
// Input:17
	vec3 n_out17p0 = vec3(SCREEN_UV, 0.0);

// VectorDecompose:18
	float n_out18p0 = n_out17p0.x;
	float n_out18p1 = n_out17p0.y;
	float n_out18p2 = n_out17p0.z;

// Input:21
	float n_out21p0 = TIME;

// ScalarOp:22
	float n_in22p1 = 0.02000;
	float n_out22p0 = n_out21p0 * n_in22p1;

// ScalarOp:20
	float n_out20p0 = n_out18p0 + n_out22p0;

// VectorCompose:19
	float n_in19p2 = 0.00000;
	vec3 n_out19p0 = vec3(n_out20p0, n_out18p1, n_in19p2);

// Texture:23
	vec4 tex_frg_23_read = texture(tex_frg_23, n_out19p0.xy);
	vec3 n_out23p0 = tex_frg_23_read.rgb;
	float n_out23p1 = tex_frg_23_read.a;

// Input:9
	vec3 n_out9p0 = vec3(SCREEN_UV, 0.0);

// VectorDecompose:12
	float n_out12p0 = n_out9p0.x;
	float n_out12p1 = n_out9p0.y;
	float n_out12p2 = n_out9p0.z;

// Input:15
	float n_out15p0 = TIME;

// ScalarOp:16
	float n_in16p1 = 0.03700;
	float n_out16p0 = n_out15p0 * n_in16p1;

// ScalarOp:14
	float n_out14p0 = n_out12p1 + n_out16p0;

// VectorCompose:13
	float n_in13p2 = 0.00000;
	vec3 n_out13p0 = vec3(n_out12p0, n_out14p0, n_in13p2);

// Texture:6
	vec4 tex_frg_6_read = texture(tex_frg_6, n_out13p0.xy);
	vec3 n_out6p0 = tex_frg_6_read.rgb;
	float n_out6p1 = tex_frg_6_read.a;

// VectorOp:24
	vec3 n_out24p0 = n_out23p0 + n_out6p0;

// Scalar:11
	float n_out11p0 = 0.050000;

// VectorOp:10
	vec3 n_out10p0 = n_out24p0 * vec3(n_out11p0);

// Input:7
	vec3 n_out7p0 = vec3(UV, 0.0);

// VectorOp:8
	vec3 n_out8p0 = n_out10p0 + n_out7p0;

// Texture:4
	vec3 n_out4p0;
	float n_out4p1;
	{
		vec4 _tex_read = texture(TEXTURE, n_out8p0.xy);
		n_out4p0 = _tex_read.rgb;
		n_out4p1 = _tex_read.a;
	}

// Input:3
	float n_out3p0 = COLOR.a;

// VectorOp:5
	vec3 n_out5p0 = vec3(n_out4p1) * vec3(n_out3p0);

// Output:0
	COLOR.rgb = n_out4p0;
	COLOR.a = dot(n_out5p0, vec3(0.333333, 0.333333, 0.333333));

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -1879.83, -188.762 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 480, 40 )
nodes/fragment/3/node = SubResource( 1 )
nodes/fragment/3/position = Vector2( -20, 200 )
nodes/fragment/4/node = SubResource( 2 )
nodes/fragment/4/position = Vector2( -60, 20 )
nodes/fragment/5/node = SubResource( 3 )
nodes/fragment/5/position = Vector2( 240, 120 )
nodes/fragment/6/node = SubResource( 10 )
nodes/fragment/6/position = Vector2( -1300, -60 )
nodes/fragment/7/node = SubResource( 11 )
nodes/fragment/7/position = Vector2( -520, 260 )
nodes/fragment/8/node = SubResource( 12 )
nodes/fragment/8/position = Vector2( -360, 40 )
nodes/fragment/9/node = SubResource( 13 )
nodes/fragment/9/position = Vector2( -2540, 60 )
nodes/fragment/10/node = SubResource( 8 )
nodes/fragment/10/position = Vector2( -720, 40 )
nodes/fragment/11/node = SubResource( 9 )
nodes/fragment/11/position = Vector2( -920, 220 )
nodes/fragment/12/node = SubResource( 14 )
nodes/fragment/12/position = Vector2( -2280, 60 )
nodes/fragment/13/node = SubResource( 15 )
nodes/fragment/13/position = Vector2( -1660, 60 )
nodes/fragment/14/node = SubResource( 16 )
nodes/fragment/14/position = Vector2( -1920, 60 )
nodes/fragment/15/node = SubResource( 17 )
nodes/fragment/15/position = Vector2( -2500, 220 )
nodes/fragment/16/node = SubResource( 18 )
nodes/fragment/16/position = Vector2( -2200, 200 )
nodes/fragment/17/node = SubResource( 19 )
nodes/fragment/17/position = Vector2( -2500, -320 )
nodes/fragment/18/node = SubResource( 20 )
nodes/fragment/18/position = Vector2( -2240, -320 )
nodes/fragment/19/node = SubResource( 21 )
nodes/fragment/19/position = Vector2( -1620, -320 )
nodes/fragment/20/node = SubResource( 22 )
nodes/fragment/20/position = Vector2( -1880, -340 )
nodes/fragment/21/node = SubResource( 23 )
nodes/fragment/21/position = Vector2( -2460, -160 )
nodes/fragment/22/node = SubResource( 24 )
nodes/fragment/22/position = Vector2( -2160, -180 )
nodes/fragment/23/node = SubResource( 25 )
nodes/fragment/23/position = Vector2( -1340, -460 )
nodes/fragment/24/node = SubResource( 26 )
nodes/fragment/24/position = Vector2( -990.29, -224.989 )
nodes/fragment/connections = PoolIntArray( 4, 0, 0, 0, 3, 0, 5, 1, 4, 1, 5, 0, 5, 0, 0, 1, 7, 0, 8, 1, 8, 0, 4, 0, 10, 0, 8, 0, 11, 0, 10, 1, 9, 0, 12, 0, 13, 0, 6, 0, 12, 0, 13, 0, 12, 1, 14, 0, 14, 0, 13, 1, 15, 0, 16, 0, 16, 0, 14, 1, 17, 0, 18, 0, 19, 0, 23, 0, 21, 0, 22, 0, 22, 0, 20, 1, 23, 0, 24, 0, 6, 0, 24, 1, 24, 0, 10, 0, 18, 0, 20, 0, 20, 0, 19, 0, 18, 1, 19, 1 )

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 4 )

[sub_resource type="Curve" id=6]
_data = [ Vector2( 0, 0.360227 ), 0.0, 1.12291, 0, 0, Vector2( 1, 1 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="Gradient" id=7]
offsets = PoolRealArray( 0, 0.128492, 1 )
colors = PoolColorArray( 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0 )

[node name="WaveRing" type="CPUParticles2D"]
material = SubResource( 5 )
emitting = false
amount = 2
lifetime = 3.0
local_coords = false
texture = ExtResource( 1 )
gravity = Vector2( 0, 0 )
scale_amount_curve = SubResource( 6 )
color_ramp = SubResource( 7 )
